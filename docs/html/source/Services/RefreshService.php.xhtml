<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of RefreshService.php</title><link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/><link rel="stylesheet" href="../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../index.xhtml">Overview</a></li><li class="separator"><a href="../../namespaces.xhtml">Namespaces</a></li><li><a href="../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../index.xhtml">Overview</a></li><li class="separator"><a href="../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file RefreshService.php</h1><p>
                        Size: 14,984 Bytes - Last Modified: 2019-09-25T18:04:12+00:00</p><section><h2><small>E:/GitHub/sMaSheD/app/Services/</small>RefreshService.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker" href="#line183">183</a><a class="anker" href="#line184">184</a><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a><a class="anker" href="#line187">187</a><a class="anker" href="#line188">188</a><a class="anker" href="#line189">189</a><a class="anker" href="#line190">190</a><a class="anker" href="#line191">191</a><a class="anker" href="#line192">192</a><a class="anker" href="#line193">193</a><a class="anker" href="#line194">194</a><a class="anker" href="#line195">195</a><a class="anker" href="#line196">196</a><a class="anker" href="#line197">197</a><a class="anker" href="#line198">198</a><a class="anker" href="#line199">199</a><a class="anker" href="#line200">200</a><a class="anker" href="#line201">201</a><a class="anker" href="#line202">202</a><a class="anker" href="#line203">203</a><a class="anker" href="#line204">204</a><a class="anker" href="#line205">205</a><a class="anker" href="#line206">206</a><a class="anker" href="#line207">207</a><a class="anker" href="#line208">208</a><a class="anker" href="#line209">209</a><a class="anker" href="#line210">210</a><a class="anker" href="#line211">211</a><a class="anker" href="#line212">212</a><a class="anker" href="#line213">213</a><a class="anker" href="#line214">214</a><a class="anker" href="#line215">215</a><a class="anker" href="#line216">216</a><a class="anker" href="#line217">217</a><a class="anker" href="#line218">218</a><a class="anker" href="#line219">219</a><a class="anker" href="#line220">220</a><a class="anker" href="#line221">221</a><a class="anker" href="#line222">222</a><a class="anker" href="#line223">223</a><a class="anker" href="#line224">224</a><a class="anker" href="#line225">225</a><a class="anker" href="#line226">226</a><a class="anker" href="#line227">227</a><a class="anker" href="#line228">228</a><a class="anker" href="#line229">229</a><a class="anker" href="#line230">230</a><a class="anker" href="#line231">231</a><a class="anker" href="#line232">232</a><a class="anker" href="#line233">233</a><a class="anker" href="#line234">234</a><a class="anker" href="#line235">235</a><a class="anker" href="#line236">236</a><a class="anker" href="#line237">237</a><a class="anker" href="#line238">238</a><a class="anker" href="#line239">239</a><a class="anker" href="#line240">240</a><a class="anker" href="#line241">241</a><a class="anker" href="#line242">242</a><a class="anker" href="#line243">243</a><a class="anker" href="#line244">244</a><a class="anker" href="#line245">245</a><a class="anker" href="#line246">246</a><a class="anker" href="#line247">247</a><a class="anker" href="#line248">248</a><a class="anker" href="#line249">249</a><a class="anker" href="#line250">250</a><a class="anker" href="#line251">251</a><a class="anker" href="#line252">252</a><a class="anker" href="#line253">253</a><a class="anker" href="#line254">254</a><a class="anker" href="#line255">255</a><a class="anker" href="#line256">256</a><a class="anker" href="#line257">257</a><a class="anker" href="#line258">258</a><a class="anker" href="#line259">259</a><a class="anker" href="#line260">260</a><a class="anker" href="#line261">261</a><a class="anker" href="#line262">262</a><a class="anker" href="#line263">263</a><a class="anker" href="#line264">264</a><a class="anker" href="#line265">265</a><a class="anker" href="#line266">266</a><a class="anker" href="#line267">267</a><a class="anker" href="#line268">268</a><a class="anker" href="#line269">269</a><a class="anker" href="#line270">270</a><a class="anker" href="#line271">271</a><a class="anker" href="#line272">272</a><a class="anker" href="#line273">273</a><a class="anker" href="#line274">274</a><a class="anker" href="#line275">275</a><a class="anker" href="#line276">276</a><a class="anker" href="#line277">277</a><a class="anker" href="#line278">278</a><a class="anker" href="#line279">279</a><a class="anker" href="#line280">280</a><a class="anker" href="#line281">281</a><a class="anker" href="#line282">282</a><a class="anker" href="#line283">283</a><a class="anker" href="#line284">284</a><a class="anker" href="#line285">285</a><a class="anker" href="#line286">286</a><a class="anker" href="#line287">287</a><a class="anker" href="#line288">288</a><a class="anker" href="#line289">289</a><a class="anker" href="#line290">290</a><a class="anker" href="#line291">291</a><a class="anker" href="#line292">292</a><a class="anker" href="#line293">293</a><a class="anker" href="#line294">294</a><a class="anker" href="#line295">295</a><a class="anker" href="#line296">296</a><a class="anker" href="#line297">297</a><a class="anker" href="#line298">298</a><a class="anker" href="#line299">299</a><a class="anker" href="#line300">300</a><a class="anker" href="#line301">301</a><a class="anker" href="#line302">302</a><a class="anker" href="#line303">303</a><a class="anker" href="#line304">304</a><a class="anker" href="#line305">305</a><a class="anker" href="#line306">306</a><a class="anker" href="#line307">307</a><a class="anker" href="#line308">308</a><a class="anker" href="#line309">309</a><a class="anker" href="#line310">310</a><a class="anker" href="#line311">311</a><a class="anker" href="#line312">312</a><a class="anker" href="#line313">313</a><a class="anker" href="#line314">314</a><a class="anker" href="#line315">315</a><a class="anker" href="#line316">316</a><a class="anker" href="#line317">317</a><a class="anker" href="#line318">318</a><a class="anker" href="#line319">319</a><a class="anker" href="#line320">320</a><a class="anker" href="#line321">321</a><a class="anker" href="#line322">322</a><a class="anker" href="#line323">323</a><a class="anker" href="#line324">324</a><a class="anker" href="#line325">325</a><a class="anker" href="#line326">326</a><a class="anker" href="#line327">327</a><a class="anker" href="#line328">328</a><a class="anker" href="#line329">329</a><a class="anker" href="#line330">330</a><a class="anker" href="#line331">331</a><a class="anker" href="#line332">332</a><a class="anker" href="#line333">333</a><a class="anker" href="#line334">334</a><a class="anker" href="#line335">335</a><a class="anker" href="#line336">336</a><a class="anker" href="#line337">337</a><a class="anker" href="#line338">338</a><a class="anker" href="#line339">339</a><a class="anker" href="#line340">340</a><a class="anker" href="#line341">341</a><a class="anker" href="#line342">342</a><a class="anker" href="#line343">343</a><a class="anker" href="#line344">344</a><a class="anker" href="#line345">345</a><a class="anker" href="#line346">346</a><a class="anker" href="#line347">347</a><a class="anker" href="#line348">348</a><a class="anker" href="#line349">349</a><a class="anker" href="#line350">350</a><a class="anker" href="#line351">351</a><a class="anker" href="#line352">352</a><a class="anker" href="#line353">353</a><a class="anker" href="#line354">354</a><a class="anker" href="#line355">355</a><a class="anker" href="#line356">356</a><a class="anker" href="#line357">357</a><a class="anker" href="#line358">358</a><a class="anker" href="#line359">359</a><a class="anker" href="#line360">360</a><a class="anker" href="#line361">361</a><a class="anker" href="#line362">362</a><a class="anker" href="#line363">363</a><a class="anker" href="#line364">364</a><a class="anker" href="#line365">365</a><a class="anker" href="#line366">366</a><a class="anker" href="#line367">367</a><a class="anker" href="#line368">368</a><a class="anker" href="#line369">369</a><a class="anker" href="#line370">370</a><a class="anker" href="#line371">371</a><a class="anker" href="#line372">372</a><a class="anker" href="#line373">373</a><a class="anker" href="#line374">374</a><a class="anker" href="#line375">375</a><a class="anker" href="#line376">376</a><a class="anker" href="#line377">377</a><a class="anker" href="#line378">378</a><a class="anker" href="#line379">379</a><a class="anker" href="#line380">380</a><a class="anker" href="#line381">381</a><a class="anker" href="#line382">382</a><a class="anker" href="#line383">383</a><a class="anker" href="#line384">384</a><a class="anker" href="#line385">385</a><a class="anker" href="#line386">386</a><a class="anker" href="#line387">387</a><a class="anker" href="#line388">388</a><a class="anker" href="#line389">389</a><a class="anker" href="#line390">390</a><a class="anker" href="#line391">391</a><a class="anker" href="#line392">392</a><a class="anker" href="#line393">393</a><a class="anker" href="#line394">394</a><a class="anker" href="#line395">395</a><a class="anker" href="#line396">396</a><a class="anker" href="#line397">397</a><a class="anker" href="#line398">398</a><a class="anker" href="#line399">399</a><a class="anker" href="#line400">400</a><a class="anker" href="#line401">401</a><a class="anker" href="#line402">402</a><a class="anker" href="#line403">403</a><a class="anker" href="#line404">404</a><a class="anker" href="#line405">405</a><a class="anker" href="#line406">406</a><a class="anker" href="#line407">407</a><a class="anker" href="#line408">408</a><a class="anker" href="#line409">409</a><a class="anker" href="#line410">410</a><a class="anker" href="#line411">411</a><a class="anker" href="#line412">412</a><a class="anker" href="#line413">413</a><a class="anker" href="#line414">414</a><a class="anker" href="#line415">415</a><a class="anker" href="#line416">416</a><a class="anker" href="#line417">417</a><a class="anker" href="#line418">418</a><a class="anker" href="#line419">419</a><a class="anker" href="#line420">420</a><a class="anker" href="#line421">421</a><a class="anker" href="#line422">422</a><a class="anker" href="#line423">423</a><a class="anker" href="#line424">424</a><a class="anker" href="#line425">425</a><a class="anker" href="#line426">426</a><a class="anker" href="#line427">427</a><a class="anker" href="#line428">428</a><a class="anker" href="#line429">429</a><a class="anker" href="#line430">430</a><a class="anker" href="#line431">431</a><a class="anker" href="#line432">432</a><a class="anker" href="#line433">433</a><a class="anker" href="#line434">434</a><a class="anker" href="#line435">435</a><a class="anker" href="#line436">436</a><a class="anker" href="#line437">437</a><a class="anker" href="#line438">438</a><a class="anker" href="#line439">439</a><a class="anker" href="#line440">440</a><a class="anker" href="#line441">441</a><a class="anker" href="#line442">442</a><a class="anker" href="#line443">443</a><a class="anker" href="#line444">444</a><a class="anker" href="#line445">445</a><a class="anker" href="#line446">446</a><a class="anker" href="#line447">447</a><a class="anker" href="#line448">448</a><a class="anker" href="#line449">449</a><a class="anker" href="#line450">450</a><a class="anker" href="#line451">451</a><a class="anker" href="#line452">452</a><a class="anker" href="#line453">453</a><a class="anker" href="#line454">454</a><a class="anker" href="#line455">455</a><a class="anker" href="#line456">456</a><a class="anker" href="#line457">457</a><a class="anker" href="#line458">458</a><a class="anker" href="#line459">459</a><a class="anker" href="#line460">460</a><a class="anker" href="#line461">461</a><a class="anker" href="#line462">462</a><a class="anker" href="#line463">463</a><a class="anker" href="#line464">464</a><a class="anker" href="#line465">465</a><a class="anker" href="#line466">466</a><a class="anker" href="#line467">467</a><a class="anker" href="#line468">468</a><a class="anker" href="#line469">469</a><a class="anker" href="#line470">470</a><a class="anker" href="#line471">471</a><a class="anker" href="#line472">472</a><a class="anker" href="#line473">473</a><a class="anker" href="#line474">474</a><a class="anker" href="#line475">475</a><a class="anker" href="#line476">476</a><a class="anker" href="#line477">477</a><a class="anker" href="#line478">478</a><a class="anker" href="#line479">479</a><a class="anker" href="#line480">480</a><a class="anker" href="#line481">481</a><a class="anker" href="#line482">482</a><a class="anker" href="#line483">483</a><a class="anker" href="#line484">484</a><a class="anker" href="#line485">485</a><a class="anker" href="#line486">486</a><a class="anker" href="#line487">487</a><a class="anker" href="#line488">488</a><a class="anker" href="#line489">489</a><a class="anker" href="#line490">490</a><a class="anker" href="#line491">491</a><a class="anker" href="#line492">492</a><a class="anker" href="#line493">493</a><a class="anker" href="#line494">494</a><a class="anker" href="#line495">495</a><a class="anker" href="#line496">496</a><a class="anker" href="#line497">497</a><a class="anker" href="#line498">498</a><a class="anker" href="#line499">499</a><a class="anker" href="#line500">500</a><a class="anker" href="#line501">501</a><a class="anker" href="#line502">502</a><a class="anker" href="#line503">503</a><a class="anker" href="#line504">504</a><a class="anker" href="#line505">505</a><a class="anker" href="#line506">506</a><a class="anker" href="#line507">507</a><a class="anker" href="#line508">508</a><a class="anker" href="#line509">509</a><a class="anker" href="#line510">510</a><a class="anker" href="#line511">511</a><a class="anker" href="#line512">512</a><a class="anker" href="#line513">513</a><a class="anker" href="#line514">514</a><a class="anker" href="#line515">515</a><a class="anker" href="#line516">516</a><a class="anker" href="#line517">517</a><a class="anker" href="#line518">518</a><a class="anker" href="#line519">519</a><a class="anker" href="#line520">520</a><a class="anker" href="#line521">521</a><a class="anker" href="#line522">522</a><a class="anker" href="#line523">523</a><a class="anker" href="#line524">524</a><a class="anker" href="#line525">525</a><a class="anker" href="#line526">526</a><a class="anker" href="#line527">527</a><a class="anker" href="#line528">528</a><a class="anker" href="#line529">529</a><a class="anker" href="#line530">530</a><a class="anker" href="#line531">531</a><a class="anker" href="#line532">532</a><a class="anker" href="#line533">533</a><a class="anker" href="#line534">534</a><a class="anker" href="#line535">535</a><a class="anker" href="#line536">536</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">App</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Services</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line4"><br/></div><div id="line5"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">DB</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line6"><br/></div><div id="line7"><pre><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">RefreshService</span></pre></div><div id="line8"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line9"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// Parsing received string data to array of JSON messages </span></pre></div><div id="line10"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parse_JSON</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line11"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line12"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// echo $msg;</span></pre></div><div id="line13"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$messages</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line14"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$start</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line15"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$lastIndex</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line16"><br/></div><div id="line17"><pre><span class="token T_WHITESPACE">		</span><span class="token T_FOR">for</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$i</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$i</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_LT">&lt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strlen</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$i</span><span class="token T_INC">++</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line18"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line19"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_COMMENT">// if($msg[$i] == '\\' &amp;&amp; $msg[$i+1] == 'n')</span></pre></div><div id="line20"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$i</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"\n"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line21"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line22"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_VARIABLE">$messages</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">substr</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$start</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$i</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$start</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line23"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_VARIABLE">$start</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$i</span><span class="token T_PHPDOX_PLUS">+</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line24"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line25"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_VARIABLE">$lastIndex</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$i</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line26"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line27"><pre><span class="token T_WHITESPACE">    	</span><span class="token T_VARIABLE">$messages</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">substr</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$start</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$lastIndex</span><span class="token T_PHPDOX_PLUS">+</span><span class="token T_LNUMBER">1</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$start</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line28"><br/></div><div id="line29"><pre><span class="token T_WHITESPACE">    	</span><span class="token T_COMMENT">// convert strings to JSON</span></pre></div><div id="line30"><pre><span class="token T_WHITESPACE">    	</span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$messages</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$str</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line31"><pre><span class="token T_WHITESPACE">    	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line32"><pre><span class="token T_WHITESPACE">	    	</span><span class="token T_COMMENT">// var_dump(json_decode($str, true));</span></pre></div><div id="line33"><pre><span class="token T_WHITESPACE">    		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">trim</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$str</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">""</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line34"><pre><span class="token T_WHITESPACE">    		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line35"><pre><span class="token T_WHITESPACE">    			</span><span class="token T_VARIABLE">$decodedMsg</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">json_decode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$str</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line36"><pre><span class="token T_WHITESPACE">    			</span><span class="token T_COMMENT">// skip empty</span></pre></div><div id="line37"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$decodedMsg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line38"><pre><span class="token T_WHITESPACE">			    	</span><span class="token T_VARIABLE">$decodedMessages</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$decodedMsg</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line39"><pre><span class="token T_WHITESPACE">    		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line40"><pre><span class="token T_WHITESPACE">    	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line41"><br/></div><div id="line42"><pre><span class="token T_WHITESPACE">    	</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$decodedMessages</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line43"><pre><span class="token T_WHITESPACE">	    	</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$decodedMessages</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line44"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_COMMENT">// in case response object is in different format --&gt; HTTP</span></pre></div><div id="line45"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_COMMENT">// parse errors to expected format</span></pre></div><div id="line46"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_ELSE">else</span></pre></div><div id="line47"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line48"><pre><span class="token T_WHITESPACE">	    	</span><span class="token T_COMMENT">// Unsupported response type: HTTP ---&gt; </span></pre></div><div id="line49"><pre><span class="token T_WHITESPACE">	    	</span><span class="token T_COMMENT">//		string(103) "HTTP/1.1 400 Bad Request</span></pre></div><div id="line50"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// 					Content-Type: text/plain; charset=utf-8</span></pre></div><div id="line51"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// 					Connection: close</span></pre></div><div id="line52"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"HTTP/1.1 400 Bad Request"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line53"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line54"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$httpError</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line55"><pre><span class="token T_WHITESPACE">					</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP/1.1 400 Bad Request'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line56"><pre><span class="token T_WHITESPACE">					</span><span class="token T_CONSTANT_ENCAPSED_STRING">'id'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line57"><pre><span class="token T_WHITESPACE">					</span><span class="token T_CONSTANT_ENCAPSED_STRING">'result'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line59"><pre><span class="token T_WHITESPACE">				</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$httpError</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line60"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line61"><pre><span class="token T_WHITESPACE">			</span><span class="token T_ELSE">else</span></pre></div><div id="line62"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line63"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$undefinedError</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line64"><pre><span class="token T_WHITESPACE">					</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Unknown server reply'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line65"><pre><span class="token T_WHITESPACE">					</span><span class="token T_CONSTANT_ENCAPSED_STRING">'id'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line66"><pre><span class="token T_WHITESPACE">					</span><span class="token T_CONSTANT_ENCAPSED_STRING">'result'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span></pre></div><div id="line67"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line68"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$undefinedError</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line69"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line70"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line71"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line72"><br/></div><div id="line73"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// return true if error is false positive (message not mean an ERROR)</span></pre></div><div id="line74"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">checkErrorMessage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line75"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line76"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// definition of false positive messages</span></pre></div><div id="line77"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$falsePositiveMessages</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line78"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">"invalid address used for login"</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line79"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">"invalid payment address provided"</span></pre></div><div id="line80"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line81"><br/></div><div id="line82"><pre><span class="token T_WHITESPACE">		</span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$falsePositiveMessages</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$m</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line83"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line84"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$m</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line85"><pre><span class="token T_WHITESPACE">				</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line86"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line87"><br/></div><div id="line88"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line90"><br/></div><div id="line91"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// Check responses and classify status of the server</span></pre></div><div id="line92"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">checkResponse</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$parsed</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line93"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line94"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$retCode</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line95"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'0'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// OK</span></pre></div><div id="line96"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'1'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// EMPTY</span></pre></div><div id="line97"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'2'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// OTHER</span></pre></div><div id="line98"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'3'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// ERR</span></pre></div><div id="line99"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line100"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Default checkResponse'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line101"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$errmsg</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line102"><br/></div><div id="line103"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// process every message individually</span></pre></div><div id="line104"><pre><span class="token T_WHITESPACE">		</span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$parsed</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line105"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line106"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$isOther</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line107"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line108"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line109"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'1'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// EMPTY MESSAGE</span></pre></div><div id="line110"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONTINUE">continue</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line111"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line112"><br/></div><div id="line113"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// check error parameter</span></pre></div><div id="line114"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_key_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line115"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line116"><pre><span class="token T_WHITESPACE">	        	</span><span class="token T_COMMENT">// error not null</span></pre></div><div id="line117"><pre><span class="token T_WHITESPACE">	        	</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line118"><pre><span class="token T_WHITESPACE">	        	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line119"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">is_string</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">    </span><span class="token T_COMMENT">// load error message if simple string</span></pre></div><div id="line120"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line121"><pre><span class="token T_WHITESPACE">		    			</span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'3'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line122"><pre><span class="token T_WHITESPACE">		    			</span><span class="token T_VARIABLE">$errmsg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line123"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line124"><pre><span class="token T_WHITESPACE">					</span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> 	</span><span class="token T_COMMENT">// error is object, contains multiple keys</span></pre></div><div id="line125"><pre><span class="token T_WHITESPACE">					</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line126"><pre><span class="token T_WHITESPACE">						</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">in_array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'login'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// specific key in error for login method</span></pre></div><div id="line127"><pre><span class="token T_WHITESPACE">						</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line128"><pre><span class="token T_WHITESPACE">					        </span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'0'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// OK (unsuccessfull login =&gt; RESULT = false)</span></pre></div><div id="line129"><pre><span class="token T_WHITESPACE">					        </span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'3'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_DEC">--</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// false positive</span></pre></div><div id="line130"><pre><span class="token T_WHITESPACE">						</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line131"><pre><span class="token T_WHITESPACE">						</span><span class="token T_ELSE">else</span></pre></div><div id="line132"><pre><span class="token T_WHITESPACE">						</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line133"><pre><span class="token T_WHITESPACE">					        </span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'3'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">//  RPC-ERR</span></pre></div><div id="line134"><br/></div><div id="line135"><pre><span class="token T_WHITESPACE">					        </span><span class="token T_COMMENT">// store error message to array</span></pre></div><div id="line136"><pre><span class="token T_WHITESPACE">					        </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_key_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'message'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line137"><pre><span class="token T_WHITESPACE">								</span><span class="token T_VARIABLE">$errmsg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'message'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line138"><pre><span class="token T_WHITESPACE">							</span><span class="token T_ELSE">else</span></pre></div><div id="line139"><pre><span class="token T_WHITESPACE">								</span><span class="token T_VARIABLE">$errmsg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">implode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">" "</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line140"><pre><span class="token T_WHITESPACE">						</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line141"><pre><span class="token T_WHITESPACE">					</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line142"><br/></div><div id="line143"><pre><span class="token T_WHITESPACE">					</span><span class="token T_COMMENT">// check false positive</span></pre></div><div id="line144"><pre><span class="token T_WHITESPACE">					</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">checkErrorMessage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strtolower</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">implode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">" "</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$errmsg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line145"><pre><span class="token T_WHITESPACE">					</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line146"><pre><span class="token T_WHITESPACE">						</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$errmsg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line147"><pre><span class="token T_WHITESPACE">							</span><span class="token T_STRING">array_pop</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$errmsg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line148"><pre><span class="token T_WHITESPACE">				        </span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'3'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_DEC">--</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// NOT ERR</span></pre></div><div id="line149"><pre><span class="token T_WHITESPACE">				        </span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'0'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// NOT ERR</span></pre></div><div id="line150"><pre><span class="token T_WHITESPACE">					</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE">					</span></pre></div><div id="line151"><pre><span class="token T_WHITESPACE">		        	</span><span class="token T_VARIABLE">$isOther</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// certainly error state, not needed to do other checks</span></pre></div><div id="line152"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line153"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line154"><br/></div><div id="line155"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_COMMENT">// check result key</span></pre></div><div id="line156"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_key_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'result'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$isOther</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line157"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line158"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'result'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line159"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line160"><pre><span class="token T_WHITESPACE">			    	</span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'0'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// STATUM-OK</span></pre></div><div id="line161"><pre><span class="token T_WHITESPACE">					</span><span class="token T_VARIABLE">$isOther</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line162"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line163"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_ELSE">else</span></pre></div><div id="line164"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line165"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'3'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line166"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_VARIABLE">$errmsg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"Result field in response message = false"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line167"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_VARIABLE">$isOther</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line168"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line169"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line170"><br/></div><div id="line171"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_COMMENT">// for example method mining.set_difficulty or mining.notify;</span></pre></div><div id="line172"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_COMMENT">// messages without result and error parameter </span></pre></div><div id="line173"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_key_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'method'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$isOther</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line174"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line175"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_VARIABLE">$isOther</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line176"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'method'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"mining.set_difficulty"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line177"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'0'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line178"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_ELSEIF">elseif</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'method'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"mining.notify"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line179"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'0'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line180"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_ELSEIF">elseif</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'method'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"mining.set_target"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line181"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'0'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line182"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_ELSE">else</span></pre></div><div id="line183"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_VARIABLE">$isOther</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line184"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line185"><br/></div><div id="line186"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$isOther</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line187"><pre><span class="token T_WHITESPACE">		        </span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'2'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line188"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line189"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'0'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'3'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// OK</span></pre></div><div id="line190"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line191"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line192"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"OK"</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line193"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line194"><pre><span class="token T_WHITESPACE">		</span><span class="token T_ELSEIF">elseif</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'0'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'3'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// ERR</span></pre></div><div id="line195"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line196"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line197"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"ERR: "</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">implode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">","</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$errmsg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line198"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line199"><pre><span class="token T_WHITESPACE">		</span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE">  </span><span class="token T_COMMENT">// LISTEN</span></pre></div><div id="line200"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line201"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'2'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$retCode</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'1'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line202"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"EMPTY RESPONSE!"</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line203"><pre><span class="token T_WHITESPACE">			</span><span class="token T_ELSE">else</span></pre></div><div id="line204"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"Unknown method!"</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line205"><br/></div><div id="line206"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span></pre></div><div id="line207"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line208"><br/></div><div id="line209"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line210"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line211"><br/></div><div id="line212"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// send data to the socket</span></pre></div><div id="line213"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">sentTcpRequest</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$socket</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$data</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line214"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line215"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Default semtTcpRequest!'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line216"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_VARIABLE">$sent</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_AT">@</span><span class="token T_STRING">stream_socket_sendto</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$socket</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$data</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line217"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$sent</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_GT">&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line218"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line219"><pre><span class="token T_WHITESPACE">	    	</span><span class="token T_COMMENT">// selected size is in bytes, for RPC reply is enough</span></pre></div><div id="line220"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_VARIABLE">$server_response</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">fread</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$socket</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">4096</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line221"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_COMMENT">// echo $server_response;</span></pre></div><div id="line222"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_COMMENT">// echo "\n-------------------\n";</span></pre></div><div id="line223"><br/></div><div id="line224"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$server_response</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line225"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line226"><pre><span class="token T_WHITESPACE">	        	</span><span class="token T_COMMENT">// process reply</span></pre></div><div id="line227"><pre><span class="token T_WHITESPACE">		        </span><span class="token T_VARIABLE">$parsed</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parse_JSON</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$server_response</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line228"><pre><span class="token T_WHITESPACE">		        </span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">checkResponse</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$parsed</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line229"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line230"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_ELSE">else</span></pre></div><div id="line231"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line232"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// empty response</span></pre></div><div id="line233"><pre><span class="token T_WHITESPACE">		    	</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"Empty response from the server"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line234"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line235"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line236"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_ELSE">else</span></pre></div><div id="line237"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line238"><pre><span class="token T_WHITESPACE">	    	</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// Sent error</span></pre></div><div id="line239"><pre><span class="token T_WHITESPACE">	    	</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"Error during stream_socket_sendto() call"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line240"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line241"><br/></div><div id="line242"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line243"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line244"><br/></div><div id="line245"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// Returns socket descriptor for conection containing IP address and port</span></pre></div><div id="line246"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">connectToServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$connection</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line247"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line248"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line249"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$timeoutSec</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// connection timeout</span></pre></div><div id="line250"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$socket</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_AT">@</span><span class="token T_STRING">stream_socket_client</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$connection</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$errno</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$errstr</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$timeoutSec</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line251"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$socket</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line252"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line253"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$timeoutUsec</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">300000</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">//0.3 s; stram timeout</span></pre></div><div id="line254"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_STRING">stream_set_timeout</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$socket</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$timeoutSec</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$timeoutUsec</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line255"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$socket</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">//timeout setup err</span></pre></div><div id="line256"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line257"><pre><span class="token T_WHITESPACE">		</span><span class="token T_ELSE">else</span></pre></div><div id="line258"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_VARIABLE">$socket</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// unreachable</span></pre></div><div id="line259"><br/></div><div id="line260"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$socket</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line261"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line262"><br/></div><div id="line263"><br/></div><div id="line264"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line265"><pre><span class="token T_DOC_COMMENT">	 * Run active probe for Stratum mining protocol.</span></pre></div><div id="line266"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line267"><pre><span class="token T_DOC_COMMENT">	 * @param  $port, $address</span></pre></div><div id="line268"><pre><span class="token T_DOC_COMMENT">	 * @return list of results (reason and code)</span></pre></div><div id="line269"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line270"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">miningProbeStratum</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$port</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$address</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line271"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span><span class="token T_WHITESPACE"> </span></pre></div><div id="line272"><br/></div><div id="line273"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// client configuration parameters</span></pre></div><div id="line274"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$username</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"test.worker1"</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">    </span><span class="token T_COMMENT">// default for stratum is Bitcoin</span></pre></div><div id="line275"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$email</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"test.worker1@test.com"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line276"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$password</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"x"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line277"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$agent</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"Miner 1.0"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line278"><br/></div><div id="line279"><br/></div><div id="line280"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// used protocol methods --&gt; first approach</span></pre></div><div id="line281"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// $methods = [</span></pre></div><div id="line282"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// 	"mining.subscribe" =&gt; ['Miner 1.0'],</span></pre></div><div id="line283"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// 	"login" =&gt; ['login' =&gt; 'test.worker1', 'pass' =&gt; 'password', 'agent' =&gt; 'xmr/1.0'],</span></pre></div><div id="line284"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// 	"mining.authorize" =&gt; ['Bitcoin', 'x'],</span></pre></div><div id="line285"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// 	"eth_getWork" =&gt; [],</span></pre></div><div id="line286"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">//  "getblocktemplate" = array(),</span></pre></div><div id="line287"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">//  "getwork" =&gt; array()		</span></pre></div><div id="line288"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// ];</span></pre></div><div id="line289"><br/></div><div id="line290"><br/></div><div id="line291"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// used protocol methods --&gt; second approach</span></pre></div><div id="line292"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$requests</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line293"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// "mining.subscribe" =&gt; ['Miner 1.0'],</span></pre></div><div id="line294"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// '{"jsonrpc": "2.0", "method": "mining.subscribe", "params": ["Miner 1.0"], "id": 1}',</span></pre></div><div id="line295"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'{"jsonrpc": "2.0", "method": "mining.subscribe", "params": ["'</span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$agent</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_CONSTANT_ENCAPSED_STRING">'"], "id": 1}'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line296"><br/></div><div id="line297"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// "mining.authorize" =&gt; ['Bitcoin', 'x'],</span></pre></div><div id="line298"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// '{"jsonrpc": "2.0", "method": "mining.authorize", "params": ["Bitcoin", "x"], "id": 1}',</span></pre></div><div id="line299"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'{"jsonrpc": "2.0", "method": "mining.authorize", "params": ["'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$username</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'", "'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$password</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'"], "id": 1}'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line300"><br/></div><div id="line301"><br/></div><div id="line302"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// SlushPool userName.workerName:any-password</span></pre></div><div id="line303"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// "login" =&gt; ['login' =&gt; 'test.worker1', 'pass' =&gt; 'password', 'agent' =&gt; 'xmr/1 .0'],</span></pre></div><div id="line304"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// '{"jsonrpc": "2.0", "method": "login", "params": {"login": "test.worker1", "pass": "password", "agent": "xmr/1.0"}, "id": 1}',</span></pre></div><div id="line305"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'{"jsonrpc": "2.0", "method": "login", "params": {"login": "'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$username</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'", "pass": "'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$password</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'", "agent": "'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$agent</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'"}, "id": 1}'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line306"><br/></div><div id="line307"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'{"worker": "eth1.0", "jsonrpc": "2.0", "params": [], "id": 3, "method": "eth_getWork"}'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE">			</span></pre></div><div id="line308"><pre><span class="token T_WHITESPACE">			</span></pre></div><div id="line309"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// nanopool 0x52bc44d5378309ee2abf1539bf71de1b7d7be3b5.NH/mail@example.com</span></pre></div><div id="line310"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// '{"worker": "eth1.0", "jsonrpc": "2.0", "params": ["0x52bc44d5378309ee2abf1539bf71de1b7d7be3b5/test.worker/mail@example", "x"], "id": 2, "method": "eth_submitLogin"}'</span></pre></div><div id="line311"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'{"worker": "eth1.0", "jsonrpc": "2.0", "params": ["0x52bc44d5378309ee2abf1539bf71de1b7d7be3b5/'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$username</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'/'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$email</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'", "'</span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$password</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'"], "id": 2, "method": "eth_submitLogin"}'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line312"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// NICEHASH =&gt; you can add the worker's name in your stratum username; use the following format: "YourBitcoinAddress.WorkerName" where WorkerName is up to fifteen alphanumeric (As-Zz, 0-9) characters; example: 13pkLyfskZ3qWmHULpk8XZa6gACKQ2jDX.MyASIC01</span></pre></div><div id="line313"><br/></div><div id="line314"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// '{"id": 1, "method": "getblocktemplate", "params": []}',</span></pre></div><div id="line315"><br/></div><div id="line316"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// '{"id": 1, "method": "getwork", "params": []}'</span></pre></div><div id="line317"><br/></div><div id="line318"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// add new messages in the future ...</span></pre></div><div id="line319"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line320"><br/></div><div id="line321"><br/></div><div id="line322"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$maxRetCode</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line323"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$resultReason</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line324"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$connection</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'tcp://'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$address</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">':'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$port</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line325"><pre><span class="token T_WHITESPACE">		</span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requests</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$request</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line326"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// foreach ($methods as $method =&gt; $param)</span></pre></div><div id="line327"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line328"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$socket</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">connectToServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$connection</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line329"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// default error code</span></pre></div><div id="line330"><br/></div><div id="line331"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$socket</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line332"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line333"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$resultReason</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"Connection timeout setup error"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line334"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line335"><pre><span class="token T_WHITESPACE">			</span><span class="token T_ELSEIF">elseif</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$socket</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_MINUS">-</span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line336"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line337"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"Destination unreachable - connection failed"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line338"><pre><span class="token T_WHITESPACE">				</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line339"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line340"><pre><span class="token T_WHITESPACE">			</span><span class="token T_ELSEIF">elseif</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$socket</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line341"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line342"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// block of code for first approach, problematic -&gt; for in case of different methods</span></pre></div><div id="line343"><pre><span class="token T_WHITESPACE">	    		</span><span class="token T_COMMENT">// $data = '{"jsonrpc": "2.0", "id": 1, "method": "mining.subscribe", "params": []}' . "\n";</span></pre></div><div id="line344"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// prepare JSON-RPC message</span></pre></div><div id="line345"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// $request = [</span></pre></div><div id="line346"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// 	'jsonrpc' =&gt; '2.0',</span></pre></div><div id="line347"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// 	'id' =&gt; 1,</span></pre></div><div id="line348"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// 	'method' =&gt; $method,</span></pre></div><div id="line349"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// 	'params' =&gt; $param</span></pre></div><div id="line350"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// ];</span></pre></div><div id="line351"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// $data = json_encode($request) . "\n";</span></pre></div><div id="line352"><br/></div><div id="line353"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$method</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">json_decode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$request</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">method</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// load method name from JSON message</span></pre></div><div id="line354"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$data</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$request</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"\n"</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">  	</span><span class="token T_COMMENT">// append new line character !!!</span></pre></div><div id="line355"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$resultReason</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$method</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">  	</span><span class="token T_COMMENT">// built reason message</span></pre></div><div id="line356"><br/></div><div id="line357"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// send request</span></pre></div><div id="line358"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">sentTcpRequest</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$socket</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$data</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line359"><br/></div><div id="line360"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// echo $data . "\n";</span></pre></div><div id="line361"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$resultReason</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">" =&gt; "</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">' ('</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'); '</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line362"><pre><span class="token T_WHITESPACE">				</span></pre></div><div id="line363"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// keep highest return code</span></pre></div><div id="line364"><pre><span class="token T_WHITESPACE">				</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$maxRetCode</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_SMALLER_OR_EQUAL">&lt;=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line365"><pre><span class="token T_WHITESPACE">					</span><span class="token T_VARIABLE">$maxRetCode</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line366"><br/></div><div id="line367"><pre><span class="token T_WHITESPACE">				</span><span class="token T_COMMENT">// stop if test result =&gt; OK</span></pre></div><div id="line368"><pre><span class="token T_WHITESPACE">				</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line369"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line370"><pre><span class="token T_WHITESPACE">					</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$resultReason</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line371"><pre><span class="token T_WHITESPACE">					</span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line372"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line373"><br/></div><div id="line374"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$maxRetCode</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line375"><pre><span class="token T_WHITESPACE">				</span><span class="token T_STRING">stream_socket_shutdown</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$socket</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">STREAM_SHUT_RDWR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">			</span></pre></div><div id="line376"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span></pre></div><div id="line377"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line378"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$resultReason</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line379"><br/></div><div id="line380"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line381"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line382"><pre><span class="token T_WHITESPACE">	</span></pre></div><div id="line383"><br/></div><div id="line384"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line385"><pre><span class="token T_DOC_COMMENT">	 * Run active probe for Getblocktemplate mining protocol.</span></pre></div><div id="line386"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line387"><pre><span class="token T_DOC_COMMENT">	 * @param  $port, $address</span></pre></div><div id="line388"><pre><span class="token T_DOC_COMMENT">	 * @return list of results (reason and code)</span></pre></div><div id="line389"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line390"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">miningProbeGetblocktemplate</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$port</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$address</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line391"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span><span class="token T_WHITESPACE">      </span></pre></div><div id="line392"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$urlPref</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'http://'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line393"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$user</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Bitcoin'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line394"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$password</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'x'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line395"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$extensions</span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_CONSTANT_ENCAPSED_STRING">"longpoll midstate rollntime submitold"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line396"><br/></div><div id="line397"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// create JSON-RPC message</span></pre></div><div id="line398"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// $data = [</span></pre></div><div id="line399"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// 	'id' =&gt; 1,</span></pre></div><div id="line400"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// 	'method' =&gt; 'getblocktemplate',</span></pre></div><div id="line401"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// 	'params' =&gt; [array("capabilities" =&gt; array("coinbasetxn", "workid", "coinbase/append"))]</span></pre></div><div id="line402"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// ];</span></pre></div><div id="line403"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// $encodedData = json_encode($data);</span></pre></div><div id="line404"><br/></div><div id="line405"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// define message</span></pre></div><div id="line406"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$encodedData</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'{"id": 1, "method": "getblocktemplate", "params": [{"capabilities": ["coinbasetxn", "workid", "coinbase/append"]}]}'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"\n"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line407"><br/></div><div id="line408"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// use CURL to send HTTP request</span></pre></div><div id="line409"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$ch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">curl_init</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line410"><br/></div><div id="line411"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// configure request parameters</span></pre></div><div id="line412"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_URL</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$urlPref</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$address</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line413"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_PORT</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$port</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line414"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_POST</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line415"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_RETURNTRANSFER</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line416"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_TIMEOUT</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line417"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_HEADER</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line418"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_USERPWD</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$user</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">":"</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$password</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// if auth</span></pre></div><div id="line419"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_USERAGENT</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Miner 1.0'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line420"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_ENCODING</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"deflate, gzip"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line421"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_POSTFIELDS</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$encodedData</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line422"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_setopt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CURLOPT_HTTPHEADER</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_WHITESPACE">         </span></pre></div><div id="line423"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Content-Type: application/json'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line424"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Content-Length: '</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strlen</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$encodedData</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line425"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'X-Mining-Extensions: '</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$extensions</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line426"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line427"><br/></div><div id="line428"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// execute request</span></pre></div><div id="line429"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$response</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">curl_exec</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line430"><br/></div><div id="line431"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// decode response message</span></pre></div><div id="line432"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$msg</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">json_decode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$response</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line433"><br/></div><div id="line434"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line435"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line436"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// check error parameter</span></pre></div><div id="line437"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_key_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line438"><pre><span class="token T_WHITESPACE">	        </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line439"><pre><span class="token T_WHITESPACE">	        	</span><span class="token T_COMMENT">// error not null</span></pre></div><div id="line440"><pre><span class="token T_WHITESPACE">	        	</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line441"><pre><span class="token T_WHITESPACE">	        	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line442"><pre><span class="token T_WHITESPACE">	        		</span><span class="token T_COMMENT">// load error message</span></pre></div><div id="line443"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">is_string</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line444"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line445"><pre><span class="token T_WHITESPACE">		    			</span><span class="token T_VARIABLE">$errmsg</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line446"><pre><span class="token T_WHITESPACE">		    		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line447"><pre><span class="token T_WHITESPACE">					</span><span class="token T_ELSE">else</span></pre></div><div id="line448"><pre><span class="token T_WHITESPACE">					</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line449"><br/></div><div id="line450"><pre><span class="token T_WHITESPACE">				        </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_key_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'message'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line451"><pre><span class="token T_WHITESPACE">							</span><span class="token T_VARIABLE">$errmsg</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'message'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line452"><pre><span class="token T_WHITESPACE">						</span><span class="token T_ELSE">else</span></pre></div><div id="line453"><pre><span class="token T_WHITESPACE">							</span><span class="token T_VARIABLE">$errmsg</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">implode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">" "</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'error'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line454"><pre><span class="token T_WHITESPACE">					</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line455"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line456"><pre><span class="token T_WHITESPACE">		        </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"ERR: "</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$errmsg</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span></pre></div><div id="line457"><pre><span class="token T_WHITESPACE">		        </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">//  RPC-ERR</span></pre></div><div id="line458"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line459"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// check result parameter</span></pre></div><div id="line460"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_key_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'result'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line461"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line462"><pre><span class="token T_WHITESPACE">				</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$msg</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'result'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line463"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line464"><pre><span class="token T_WHITESPACE">			    	</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// GBT-OK</span></pre></div><div id="line465"><pre><span class="token T_WHITESPACE">			    	</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"getblocktemplate =&gt; OK;"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line466"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line467"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line468"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line469"><pre><span class="token T_WHITESPACE">		</span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$curl_error</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">curl_error</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line470"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line471"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'CURL error: '</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$curl_error</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">';'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line472"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strtolower</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$curl_error</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"empty reply"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line473"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">2</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line474"><pre><span class="token T_WHITESPACE">			</span><span class="token T_ELSE">else</span></pre></div><div id="line475"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line476"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line477"><pre><span class="token T_WHITESPACE">		</span><span class="token T_ELSE">else</span></pre></div><div id="line478"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line479"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Undefined error'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line480"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line481"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line482"><br/></div><div id="line483"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">curl_close</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ch</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line484"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line485"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line486"><br/></div><div id="line487"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">miningProbeGetwork</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$port</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$address</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line488"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span><span class="token T_WHITESPACE">      </span></pre></div><div id="line489"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// for futer implementation</span></pre></div><div id="line490"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line491"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line492"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line493"><br/></div><div id="line494"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// helper function, create new record in History table</span></pre></div><div id="line495"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">addHistoryRecord</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$miningPropId</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$status</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$timestamp</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line496"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line497"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">DB</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">table</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'history'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">insert</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line498"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'miningProp_id'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$miningPropId</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line499"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'status'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$status</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line500"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$status</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line501"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'created_at'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$timestamp</span></pre></div><div id="line502"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line503"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line504"><br/></div><div id="line505"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// helper function, create new record in MiningProperties table</span></pre></div><div id="line506"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">addMiningPropRecord</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$serverId</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$address</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$port</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$protocol</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$status</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$timestamp</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line507"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line508"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$id</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">DB</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">table</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'miningProperties'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">insertGetId</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span></pre></div><div id="line509"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'server_id'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$serverId</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line510"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'address'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$address</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line511"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'port'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$port</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line512"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'protocol'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$protocol</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line513"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'status'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$status</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'code'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line514"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$status</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'reason'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line515"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'created_at'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$timestamp</span></pre></div><div id="line516"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line517"><br/></div><div id="line518"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$id</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line519"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line520"><br/></div><div id="line521"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// remove records from miningProperties table </span></pre></div><div id="line522"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">clearMiningProp</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line523"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line524"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_STRING">DB</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">statement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'SET FOREIGN_KEY_CHECKS=0;'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line525"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_STRING">DB</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">table</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'miningProperties'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">truncate</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line526"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_STRING">DB</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">statement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'SET FOREIGN_KEY_CHECKS=1;'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line527"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line528"><br/></div><div id="line529"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// remove records from historyTable table </span></pre></div><div id="line530"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">clearHistory</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line531"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line532"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_STRING">DB</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">statement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'SET FOREIGN_KEY_CHECKS=0;'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line533"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_STRING">DB</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">table</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'history'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">truncate</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line534"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_STRING">DB</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">statement</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'SET FOREIGN_KEY_CHECKS=1;'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line535"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line536"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.12.0 - Copyright (C) 2010 - 2020 by Arne Blankerts and Contributors</span></footer></body></html>
